# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Chassis100ChassisLinks(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Chassis100ChassisLinks - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'containsodata_navigation_link': 'Odata400IdRef',
            'managed_by': 'list[ManagerManager]',
            'powered_byodata_navigation_link': 'Odata400IdRef',
            'contained_by': 'ChassisChassis',
            'powered_byodata_count': 'Odata400Count',
            'cooled_by': 'list[Odata400IdRef]',
            'managed_byodata_count': 'Odata400Count',
            'computer_systemsodata_count': 'Odata400Count',
            'contains': 'list[ChassisChassis]',
            'powered_by': 'list[Odata400IdRef]',
            'cooled_byodata_navigation_link': 'Odata400IdRef',
            'managed_byodata_navigation_link': 'Odata400IdRef',
            'computer_systems': 'list[ComputerSystemComputerSystem]',
            'containsodata_count': 'Odata400Count',
            'cooled_byodata_count': 'Odata400Count',
            'oem': 'ResourceOem',
            'computer_systemsodata_navigation_link': 'Odata400IdRef'
        }

        self.attribute_map = {
            'containsodata_navigation_link': 'Contains@odata.navigationLink',
            'managed_by': 'ManagedBy',
            'powered_byodata_navigation_link': 'PoweredBy@odata.navigationLink',
            'contained_by': 'ContainedBy',
            'powered_byodata_count': 'PoweredBy@odata.count',
            'cooled_by': 'CooledBy',
            'managed_byodata_count': 'ManagedBy@odata.count',
            'computer_systemsodata_count': 'ComputerSystems@odata.count',
            'contains': 'Contains',
            'powered_by': 'PoweredBy',
            'cooled_byodata_navigation_link': 'CooledBy@odata.navigationLink',
            'managed_byodata_navigation_link': 'ManagedBy@odata.navigationLink',
            'computer_systems': 'ComputerSystems',
            'containsodata_count': 'Contains@odata.count',
            'cooled_byodata_count': 'CooledBy@odata.count',
            'oem': 'Oem',
            'computer_systemsodata_navigation_link': 'ComputerSystems@odata.navigationLink'
        }

        self._containsodata_navigation_link = None
        self._managed_by = None
        self._powered_byodata_navigation_link = None
        self._contained_by = None
        self._powered_byodata_count = None
        self._cooled_by = None
        self._managed_byodata_count = None
        self._computer_systemsodata_count = None
        self._contains = None
        self._powered_by = None
        self._cooled_byodata_navigation_link = None
        self._managed_byodata_navigation_link = None
        self._computer_systems = None
        self._containsodata_count = None
        self._cooled_byodata_count = None
        self._oem = None
        self._computer_systemsodata_navigation_link = None

    @property
    def containsodata_navigation_link(self):
        """
        Gets the containsodata_navigation_link of this Chassis100ChassisLinks.


        :return: The containsodata_navigation_link of this Chassis100ChassisLinks.
        :rtype: Odata400IdRef
        """
        return self._containsodata_navigation_link

    @containsodata_navigation_link.setter
    def containsodata_navigation_link(self, containsodata_navigation_link):
        """
        Sets the containsodata_navigation_link of this Chassis100ChassisLinks.


        :param containsodata_navigation_link: The containsodata_navigation_link of this Chassis100ChassisLinks.
        :type: Odata400IdRef
        """
        self._containsodata_navigation_link = containsodata_navigation_link

    @property
    def managed_by(self):
        """
        Gets the managed_by of this Chassis100ChassisLinks.
        An array of references to the managers contained in this chassis.

        :return: The managed_by of this Chassis100ChassisLinks.
        :rtype: list[ManagerManager]
        """
        return self._managed_by

    @managed_by.setter
    def managed_by(self, managed_by):
        """
        Sets the managed_by of this Chassis100ChassisLinks.
        An array of references to the managers contained in this chassis.

        :param managed_by: The managed_by of this Chassis100ChassisLinks.
        :type: list[ManagerManager]
        """
        self._managed_by = managed_by

    @property
    def powered_byodata_navigation_link(self):
        """
        Gets the powered_byodata_navigation_link of this Chassis100ChassisLinks.


        :return: The powered_byodata_navigation_link of this Chassis100ChassisLinks.
        :rtype: Odata400IdRef
        """
        return self._powered_byodata_navigation_link

    @powered_byodata_navigation_link.setter
    def powered_byodata_navigation_link(self, powered_byodata_navigation_link):
        """
        Sets the powered_byodata_navigation_link of this Chassis100ChassisLinks.


        :param powered_byodata_navigation_link: The powered_byodata_navigation_link of this Chassis100ChassisLinks.
        :type: Odata400IdRef
        """
        self._powered_byodata_navigation_link = powered_byodata_navigation_link

    @property
    def contained_by(self):
        """
        Gets the contained_by of this Chassis100ChassisLinks.
        A reference to the chassis that this chassis is contained by.

        :return: The contained_by of this Chassis100ChassisLinks.
        :rtype: ChassisChassis
        """
        return self._contained_by

    @contained_by.setter
    def contained_by(self, contained_by):
        """
        Sets the contained_by of this Chassis100ChassisLinks.
        A reference to the chassis that this chassis is contained by.

        :param contained_by: The contained_by of this Chassis100ChassisLinks.
        :type: ChassisChassis
        """
        self._contained_by = contained_by

    @property
    def powered_byodata_count(self):
        """
        Gets the powered_byodata_count of this Chassis100ChassisLinks.


        :return: The powered_byodata_count of this Chassis100ChassisLinks.
        :rtype: Odata400Count
        """
        return self._powered_byodata_count

    @powered_byodata_count.setter
    def powered_byodata_count(self, powered_byodata_count):
        """
        Sets the powered_byodata_count of this Chassis100ChassisLinks.


        :param powered_byodata_count: The powered_byodata_count of this Chassis100ChassisLinks.
        :type: Odata400Count
        """
        self._powered_byodata_count = powered_byodata_count

    @property
    def cooled_by(self):
        """
        Gets the cooled_by of this Chassis100ChassisLinks.
        An array of ID[s] of resources that cool this chassis. Normally the ID will be a chassis or a specific set of fans.

        :return: The cooled_by of this Chassis100ChassisLinks.
        :rtype: list[Odata400IdRef]
        """
        return self._cooled_by

    @cooled_by.setter
    def cooled_by(self, cooled_by):
        """
        Sets the cooled_by of this Chassis100ChassisLinks.
        An array of ID[s] of resources that cool this chassis. Normally the ID will be a chassis or a specific set of fans.

        :param cooled_by: The cooled_by of this Chassis100ChassisLinks.
        :type: list[Odata400IdRef]
        """
        self._cooled_by = cooled_by

    @property
    def managed_byodata_count(self):
        """
        Gets the managed_byodata_count of this Chassis100ChassisLinks.


        :return: The managed_byodata_count of this Chassis100ChassisLinks.
        :rtype: Odata400Count
        """
        return self._managed_byodata_count

    @managed_byodata_count.setter
    def managed_byodata_count(self, managed_byodata_count):
        """
        Sets the managed_byodata_count of this Chassis100ChassisLinks.


        :param managed_byodata_count: The managed_byodata_count of this Chassis100ChassisLinks.
        :type: Odata400Count
        """
        self._managed_byodata_count = managed_byodata_count

    @property
    def computer_systemsodata_count(self):
        """
        Gets the computer_systemsodata_count of this Chassis100ChassisLinks.


        :return: The computer_systemsodata_count of this Chassis100ChassisLinks.
        :rtype: Odata400Count
        """
        return self._computer_systemsodata_count

    @computer_systemsodata_count.setter
    def computer_systemsodata_count(self, computer_systemsodata_count):
        """
        Sets the computer_systemsodata_count of this Chassis100ChassisLinks.


        :param computer_systemsodata_count: The computer_systemsodata_count of this Chassis100ChassisLinks.
        :type: Odata400Count
        """
        self._computer_systemsodata_count = computer_systemsodata_count

    @property
    def contains(self):
        """
        Gets the contains of this Chassis100ChassisLinks.
        An array of references to any other chassis that this chassis has in it.

        :return: The contains of this Chassis100ChassisLinks.
        :rtype: list[ChassisChassis]
        """
        return self._contains

    @contains.setter
    def contains(self, contains):
        """
        Sets the contains of this Chassis100ChassisLinks.
        An array of references to any other chassis that this chassis has in it.

        :param contains: The contains of this Chassis100ChassisLinks.
        :type: list[ChassisChassis]
        """
        self._contains = contains

    @property
    def powered_by(self):
        """
        Gets the powered_by of this Chassis100ChassisLinks.
        An array of ID[s] of resources that power this chassis. Normally the ID will be a chassis or a specific set of powerSupplies

        :return: The powered_by of this Chassis100ChassisLinks.
        :rtype: list[Odata400IdRef]
        """
        return self._powered_by

    @powered_by.setter
    def powered_by(self, powered_by):
        """
        Sets the powered_by of this Chassis100ChassisLinks.
        An array of ID[s] of resources that power this chassis. Normally the ID will be a chassis or a specific set of powerSupplies

        :param powered_by: The powered_by of this Chassis100ChassisLinks.
        :type: list[Odata400IdRef]
        """
        self._powered_by = powered_by

    @property
    def cooled_byodata_navigation_link(self):
        """
        Gets the cooled_byodata_navigation_link of this Chassis100ChassisLinks.


        :return: The cooled_byodata_navigation_link of this Chassis100ChassisLinks.
        :rtype: Odata400IdRef
        """
        return self._cooled_byodata_navigation_link

    @cooled_byodata_navigation_link.setter
    def cooled_byodata_navigation_link(self, cooled_byodata_navigation_link):
        """
        Sets the cooled_byodata_navigation_link of this Chassis100ChassisLinks.


        :param cooled_byodata_navigation_link: The cooled_byodata_navigation_link of this Chassis100ChassisLinks.
        :type: Odata400IdRef
        """
        self._cooled_byodata_navigation_link = cooled_byodata_navigation_link

    @property
    def managed_byodata_navigation_link(self):
        """
        Gets the managed_byodata_navigation_link of this Chassis100ChassisLinks.


        :return: The managed_byodata_navigation_link of this Chassis100ChassisLinks.
        :rtype: Odata400IdRef
        """
        return self._managed_byodata_navigation_link

    @managed_byodata_navigation_link.setter
    def managed_byodata_navigation_link(self, managed_byodata_navigation_link):
        """
        Sets the managed_byodata_navigation_link of this Chassis100ChassisLinks.


        :param managed_byodata_navigation_link: The managed_byodata_navigation_link of this Chassis100ChassisLinks.
        :type: Odata400IdRef
        """
        self._managed_byodata_navigation_link = managed_byodata_navigation_link

    @property
    def computer_systems(self):
        """
        Gets the computer_systems of this Chassis100ChassisLinks.
        An array of references to the computer systems contained in this chassis.  This will only reference ComputerSystems that are directly and wholly contained in this chassis.

        :return: The computer_systems of this Chassis100ChassisLinks.
        :rtype: list[ComputerSystemComputerSystem]
        """
        return self._computer_systems

    @computer_systems.setter
    def computer_systems(self, computer_systems):
        """
        Sets the computer_systems of this Chassis100ChassisLinks.
        An array of references to the computer systems contained in this chassis.  This will only reference ComputerSystems that are directly and wholly contained in this chassis.

        :param computer_systems: The computer_systems of this Chassis100ChassisLinks.
        :type: list[ComputerSystemComputerSystem]
        """
        self._computer_systems = computer_systems

    @property
    def containsodata_count(self):
        """
        Gets the containsodata_count of this Chassis100ChassisLinks.


        :return: The containsodata_count of this Chassis100ChassisLinks.
        :rtype: Odata400Count
        """
        return self._containsodata_count

    @containsodata_count.setter
    def containsodata_count(self, containsodata_count):
        """
        Sets the containsodata_count of this Chassis100ChassisLinks.


        :param containsodata_count: The containsodata_count of this Chassis100ChassisLinks.
        :type: Odata400Count
        """
        self._containsodata_count = containsodata_count

    @property
    def cooled_byodata_count(self):
        """
        Gets the cooled_byodata_count of this Chassis100ChassisLinks.


        :return: The cooled_byodata_count of this Chassis100ChassisLinks.
        :rtype: Odata400Count
        """
        return self._cooled_byodata_count

    @cooled_byodata_count.setter
    def cooled_byodata_count(self, cooled_byodata_count):
        """
        Sets the cooled_byodata_count of this Chassis100ChassisLinks.


        :param cooled_byodata_count: The cooled_byodata_count of this Chassis100ChassisLinks.
        :type: Odata400Count
        """
        self._cooled_byodata_count = cooled_byodata_count

    @property
    def oem(self):
        """
        Gets the oem of this Chassis100ChassisLinks.
        Oem extension object.

        :return: The oem of this Chassis100ChassisLinks.
        :rtype: ResourceOem
        """
        return self._oem

    @oem.setter
    def oem(self, oem):
        """
        Sets the oem of this Chassis100ChassisLinks.
        Oem extension object.

        :param oem: The oem of this Chassis100ChassisLinks.
        :type: ResourceOem
        """
        self._oem = oem

    @property
    def computer_systemsodata_navigation_link(self):
        """
        Gets the computer_systemsodata_navigation_link of this Chassis100ChassisLinks.


        :return: The computer_systemsodata_navigation_link of this Chassis100ChassisLinks.
        :rtype: Odata400IdRef
        """
        return self._computer_systemsodata_navigation_link

    @computer_systemsodata_navigation_link.setter
    def computer_systemsodata_navigation_link(self, computer_systemsodata_navigation_link):
        """
        Sets the computer_systemsodata_navigation_link of this Chassis100ChassisLinks.


        :param computer_systemsodata_navigation_link: The computer_systemsodata_navigation_link of this Chassis100ChassisLinks.
        :type: Odata400IdRef
        """
        self._computer_systemsodata_navigation_link = computer_systemsodata_navigation_link

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

