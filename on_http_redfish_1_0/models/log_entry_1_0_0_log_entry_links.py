# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class LogEntry100LogEntryLinks(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        LogEntry100LogEntryLinks - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'oem': 'ResourceOem',
            'origin_of_condition': 'Odata400IdRef'
        }

        self.attribute_map = {
            'oem': 'Oem',
            'origin_of_condition': 'OriginOfCondition'
        }

        self._oem = None
        self._origin_of_condition = None

    @property
    def oem(self):
        """
        Gets the oem of this LogEntry100LogEntryLinks.
        Oem extension object.

        :return: The oem of this LogEntry100LogEntryLinks.
        :rtype: ResourceOem
        """
        return self._oem

    @oem.setter
    def oem(self, oem):
        """
        Sets the oem of this LogEntry100LogEntryLinks.
        Oem extension object.

        :param oem: The oem of this LogEntry100LogEntryLinks.
        :type: ResourceOem
        """
        self._oem = oem

    @property
    def origin_of_condition(self):
        """
        Gets the origin_of_condition of this LogEntry100LogEntryLinks.
        This is the URI of the resource that caused the log entry

        :return: The origin_of_condition of this LogEntry100LogEntryLinks.
        :rtype: Odata400IdRef
        """
        return self._origin_of_condition

    @origin_of_condition.setter
    def origin_of_condition(self, origin_of_condition):
        """
        Sets the origin_of_condition of this LogEntry100LogEntryLinks.
        This is the URI of the resource that caused the log entry

        :param origin_of_condition: The origin_of_condition of this LogEntry100LogEntryLinks.
        :type: Odata400IdRef
        """
        self._origin_of_condition = origin_of_condition

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

